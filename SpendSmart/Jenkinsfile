pipeline {
    agent any

    environment {
        IMAGE_NAME = 'aspnetcoremvcapp'          // Docker image name
        CONTAINER_NAME = 'aspnetcoremvc-container' // Docker container name
        HOST_PORT = '9090'                        // Port exposed on your machine
        CONTAINER_PORT = '8080'                     // Port inside the container (default for ASP.NET Core)
    }

    stages {

        stage('Checkout Source Code') {
            steps {
                echo 'üì• Cloning repository...'
                checkout scm  // Pulls code from your Git repository (GitHub/GitLab)
            }
        }

        stage('Restore Dependencies') {
            steps {
                echo 'üîß Restoring NuGet packages...'
                sh 'dotnet restore'  // Restores packages from .csproj
            }
        }

        stage('Build Project') {
            steps {
                echo 'üèóÔ∏è Building ASP.NET Core MVC app...'
                sh 'dotnet build --no-restore'  // Compiles your project
            }
        }

        stage('Publish Release Build') {
            steps {
                echo 'üöÄ Publishing app to output folder...'
                sh 'dotnet publish -c Release -o out'  // Publishes files to /out
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'üê≥ Building Docker image...'
                sh "docker build -t ${IMAGE_NAME}:latest -f SpendSmart/Dockerfile ."
                
            }
        }

        stage('Stop & Remove Existing Container') {
            steps {
                echo 'üßπ Stopping and removing old container (if running)...'
                sh "docker stop ${CONTAINER_NAME} || true"
                sh "docker rm ${CONTAINER_NAME} || true"
            }
        }

        stage('Run Docker Container') {
            steps {
                echo 'üèÉ‚Äç‚ôÇÔ∏è Running new Docker container...'
                sh "docker run -d -p ${HOST_PORT}:${CONTAINER_PORT} --name ${CONTAINER_NAME} ${IMAGE_NAME}:latest"
            }
        }
    }

    post {
        success {
            echo "‚úÖ CI/CD pipeline completed successfully. App is running on http://localhost:${HOST_PORT}"
        }
        failure {
            echo "‚ùå CI/CD pipeline failed. Check the console output above for errors."
        }
    }
}
