@{
    ViewData["Title"] = "Create/Edit";
}
@model SpendSmart.Models.Expense
<div class="text-center">
    <h1 class="display-4">Create or Edit an Expense</h1>
    
</div>
<!-- Add validation summary for general errors -->
<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<form asp-action="CreateEditExpenseForm" asp-controller="Home">
    <!-- Anti-forgery token (security) -->
    @Html.AntiForgeryToken()
    
    <!--<input type="hidden"  asp-for="Id"/>-->
    <input hidden class="form-control" type="number" placeholder="0" asp-for="Id" />
    <div class="form-group mt-4">
        <label asp-for="Value">Value $</label>
        <input class="form-control" type="number" placeholder="0" asp-for="Value" step="0.01" />
        <!-- Validation message for Value -->
        <span asp-validation-for="Value" class="text-danger"></span>
    </div>
    <div class="form-group mt-4">

        <label asp-for="Description">Description</label>
    <input class="form-control" type="text" placeholder="Add a description" asp-for="Description" />
        <!-- Validation message for Description -->
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <button class="btn btn-primary mt-4" type="submit">Ok</button>
</form>
<!-- Add client-side validation scripts -->
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}